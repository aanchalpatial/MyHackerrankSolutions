#include <bits/stdc++.h>
#define ll long long

using namespace std;

ll blah = -1;
bool allNine(ll num){
    while(num>0){
        int rem = num % 10;
        if(rem != 9) return false;
        num/=10;
    }
    return true;
}
int check_beautiful(string str,int length,int nod){
    vector <ll> ar;
    for(int i=0;i<length;){
        ll num = 0;
        
        int x = nod;
        //cout<<"nod="<<nod;
        while(x!=0){
            int z = str[i]-'0';
            ll temp =z*pow(10,x-1);
            num += temp;
             
            if(x==1&&allNine(num)){
               ++nod;
          }
            if(x==nod&&z==0){return 0;}
            
           
            ++i;
            --x;
        }
        ar.push_back(num);
        //cout<<",num ="<<num<<"   ";
        
    }
   
   // for(int i = 0;i<ar.size();++i){cout<<ar[i]<<"-";}
    //cout<<endl;
    for(int i = 0;i<ar.size()-1;++i){
        if(ar[i+1]-ar[i] != 1){ return 0; }
    }
    blah = ar[0];
    return 1;
}
void separateNumbers(string s) {
int length = s.size();
if(length>1){
    int flag = 1;
    for(int i =1 ;i<=length/2;++i){
        int result = check_beautiful(s,length,i);
        if(result == 1){
            cout<<"YES "<<blah<<endl;
            flag =0;
            break;
        }
    }
    if(flag) cout<<"NO"<<endl;

    
}
else cout<<"NO"<<endl;

}
int main(){
     int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        separateNumbers(s);
    }

    return 0;
}

