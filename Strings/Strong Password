#include <bits/stdc++.h>

using namespace std;

// Complete the minimumNumber function below.
int minimumNumber(int n, string s) {
    // Return the minimum number of characters to make the password strong
    bool dig=false,schr=false,lc=false,uc=false;
    for(int i=0;i<s.size();++i){
        if(s[i]>=48&&s[i]<=57){
            dig=true;
        }
        else if(s[i]>=97&&s[i]<=122){
            lc=true;
        }
        else if(s[i]>=65&&s[i]<=90){
            uc=true;
        }
        else if(s[i]=='@'||s[i]=='!'||s[i]=='#'||s[i]=='$'||s[i]=='%'||s[i]=='^'||s[i]=='&'||s[i]=='*'||s[i]=='('||s[i]==')'||s[i]=='-'||s[i]=='+'){
            schr=true;
        }
                }
    int x=n;
    if(!dig)++x;
    if(!lc)++x;
    if(!uc)++x;
    if(!schr)++x;
    if(x>5) return x-n;
    else return 6-n;
    
                
                
    

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string password;
    getline(cin, password);

    int answer = minimumNumber(n, password);

    fout << answer << "\n";

    fout.close();

    return 0;
}
