#include <bits/stdc++.h>

using namespace std;

bool look(char ch,string str){
    return binary_search(str.begin(),str.end(),ch);
}

// Complete the gemstones function below.
int gemstones(vector<string> arr) {
    int cnt=0;
    int siz=arr.size();
    vector<string> vv;
    for(int i=0;i<siz;++i){
        string str=arr[i];
        sort(str.begin(),str.end());
        vv.push_back(str);
    }
    
    for(int i=0;i<vv[0].size();++i){
        char ch=vv[0][i];
        if(i!=0){if(ch==vv[0][i-1]) continue;}
        for(int j=1;j<vv.size();++j){
            if(!look(ch,vv[j])){
                //cout<<"no"<<endl;
                break;} 
            if(j==vv.size()-1) { ++cnt;
                               //cout<<cnt<<"-"<<ch<<"-"<<vv[j]<<"-"<<vv.size()-1<<endl;
                               }
        }
        
    }
    return cnt;

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    vector<string> arr(n);

    for (int i = 0; i < n; i++) {
        string arr_item;
        getline(cin, arr_item);

        arr[i] = arr_item;
    }

    int result = gemstones(arr);

    fout << result << "\n";

    fout.close();

    return 0;
}
